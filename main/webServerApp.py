import uasyncio as asyncioimport pkg_resourcesimport picowebimport utemplatefrom main import wifiManagerimport jsonimport gcclass WebServerApp:          def __init__(self,wlan,wattmeter,evse):        self.wifiManager = wlan        self.ipAddress = self.wifiManager.getIp()        self.wattmeter = wattmeter        self.evse = evse        self.port = 8000        self.ROUTES = [             ("/", self.main),             ("/datatable", self.dataTable),            ("/updateWificlient",self.updateWificlient),             ("/updateSetting",self.updateSetting),            ("/updateData", self.updateData),             ("/settings", self.settings),            ("/getEspID", self.getEspID),            ("/readRegister", self.readRegister)        ]        self.app = picoweb.WebApp(None, self.ROUTES)        def main(self,req, resp):        gc.collect()        gc.mem_free()        yield from picoweb.start_response(resp)        yield from self.app.render_template(resp,"main.html")     def settings(self,req, resp):        gc.collect()        gc.mem_free()        yield from picoweb.start_response(resp)        yield from self.app.render_template(resp, "settings.html", (req,))            def updateData(self,req, resp):        datalayer = self.wattmeter.dataLayer.data        datalayer.update(self.evse.dataLayer.data)        gc.collect()        gc.mem_free()                yield from picoweb.jsonify(resp,datalayer)                def updateWificlient(self,req, resp):        if req.method == "POST":            datalayer = {}                       size = int(req.headers[b"Content-Length"])            qs = yield from req.reader.read(size)            req.qs = qs.decode()            req.parse_qs()            for i in req.form:                 i = json.loads(i)                 print(i["ssid"],i["password"])                   datalayer = self.wifiManager.handle_configure(i["ssid"],i["password"])                self.ipAddress=self.wifiManager.getIp()                datalayer = {"process":datalayer,"ip":self.ipAddress}                        print("datalayer: ",datalayer)                yield from picoweb.jsonify(resp,datalayer)                        else:            datalayer = self.wifiManager.getSSID()            datalayer["connectSSID"] = self.wifiManager.getCurrentConnectSSID()            print(datalayer)            yield from picoweb.jsonify(resp,datalayer)                def readRegister(self,req, resp):        if req.method == "POST":            datalayer = {}                       size = int(req.headers[b"Content-Length"])            qs = yield from req.reader.read(size)            req.qs = qs.decode()            req.parse_qs()            for i in req.form:                 i = json.loads(i)                 register = int(i["register"])                data = await self.wattmeter.readWattmeterRegister(register,1)                datalayer = {"data":data}                        yield from picoweb.jsonify(resp,datalayer)                                #Funkce pro vycitani a ukladani nastaveni    def updateSetting(self,req, resp):        from main import __config__        setting = __config__.Config()                if req.method == "POST":            datalayer = {}                        size = int(req.headers[b"Content-Length"])            qs = yield from req.reader.read(size)            req.qs = qs.decode()            req.parse_qs()            for i in req.form:                 i = json.loads(i)                 datalayer = setting.handle_configure(i["variable"],i["value"])                datalayer = {"process":datalayer}                        yield from picoweb.jsonify(resp,datalayer)                        else:            datalayer = setting.getConfig()            yield from picoweb.jsonify(resp,datalayer)                                def dataTable(self,req, resp):        yield from picoweb.start_response(resp)        yield from self.app.render_template(resp, "datatable.html", (req,))    def getEspID(self,req,resp):            print("ID : ESP1, IP : ",self.wifiManager.getIp())            datalayer = {"ID":"ESP1", "IP":self.wifiManager.getIp()}            yield from picoweb.jsonify(resp,datalayer)                  async def webServerRun(self, delay, ip):        while True:            try:                print("Start webserver App")                self.app.run(debug=True, host=ip,port=self.port)                 await asyncio.sleep(delay)            except asyncio.CancelledError:                return